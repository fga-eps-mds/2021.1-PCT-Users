name: CI/CD

on:
  push:
    branches:
      - "*"
  pull_request:
    branches:
      - "*"

jobs:
  integration:
    runs-on: ubuntu-latest
    env:
      GIT_SHA: ${{ github.sha }}

    services:
      pcts_users-db:
        image: postgres:13
        
        env:
          POSTGRES_HOST: pcts_users-db
          POSTGRES_PORT: 5432
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: test1234
          POSTGRES_DB: pcts_users

        options: >-
          --name pcts_users-db
        ports:
          - 5432:5432

    steps:
      - uses: actions/checkout@v2

      - name: Stylesheet check
        run: echo 'stylesheet check'

      - name: Build image
        run: docker build -t pcts-users .

      - name: Run tests
        run: |
          docker run\
            --env POSTGRES_HOST=pcts_users-db\
            --env POSTGRES_PORT=5432\
            --env POSTGRES_USER=postgres\
            --env POSTGRES_PASSWORD=test1234\
            --env POSTGRES_DB=pcts_users\
            --env ENVIRONMENT=development\
            --env ALLOWED_HOSTS=*\
            --volume ${PWD}/:/app\
            --network ${{ job.container.network }}\
            pcts-users bash -c\
            "python manage.py makemigrations && python manage.py migrate && coverage run --source='.' manage.py test && coverage xml"

  sonarAnalysis:
    needs: integration
    name: SonarCloud Analysis
    runs-on: ubuntu-latest

    steps:
      - name: Analyze with SonarCloud
        uses: sonarsource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  deploy:
    if: github.ref == 'refs/heads/main'
    needs: integration
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
